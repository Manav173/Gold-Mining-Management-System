// <auto-generated />
using System;
using Gold_Mining_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gold_Mining_Management_System.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gold_Mining_Management_System.Models.CostManagement", b =>
                {
                    b.Property<int>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ResponsiblePerson")
                        .HasColumnType("int");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("CostId");

                    b.HasIndex("ResponsiblePerson");

                    b.HasIndex("SiteId");

                    b.ToTable("CostManagement");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.EnvironmentalData", b =>
                {
                    b.Property<int>("AssessmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessmentId"));

                    b.Property<int?>("ConductedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImpactType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("AssessmentId");

                    b.HasIndex("ConductedBy");

                    b.HasIndex("SiteId");

                    b.ToTable("EnvironmentalData");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Equipments", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<int?>("AssignedSite")
                        .HasColumnType("int");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("MaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EquipmentId");

                    b.HasIndex("AssignedSite");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.GeologicalData", b =>
                {
                    b.Property<int>("DataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DataId"));

                    b.Property<int>("Arsenopyrite")
                        .HasColumnType("int");

                    b.Property<int?>("GeologistId")
                        .HasColumnType("int");

                    b.Property<int>("Limonite")
                        .HasColumnType("int");

                    b.Property<string>("MineralComposition")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Pyrite")
                        .HasColumnType("int");

                    b.Property<int>("Quartz")
                        .HasColumnType("int");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SampleDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("DataId");

                    b.HasIndex("GeologistId");

                    b.HasIndex("ReportId");

                    b.HasIndex("SiteId");

                    b.ToTable("GeologicalData");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.MinePlans", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("AssignedEngineer")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PlanId");

                    b.HasIndex("AssignedEngineer");

                    b.HasIndex("SiteId");

                    b.ToTable("MinePlans");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Notifications", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SendFrom")
                        .HasColumnType("int");

                    b.Property<int>("SendTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NotificationId");

                    b.HasIndex("SendFrom");

                    b.HasIndex("SendTo");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Production", b =>
                {
                    b.Property<int>("ProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductionId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("GoldProduced")
                        .HasColumnType("float");

                    b.Property<double>("OreExtracted")
                        .HasColumnType("float");

                    b.Property<int?>("ShiftSupervisor")
                        .HasColumnType("int");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("ProductionId");

                    b.HasIndex("ShiftSupervisor");

                    b.HasIndex("SiteId");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Reports", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Efficiency")
                        .HasColumnType("int");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceManagement")
                        .HasColumnType("int");

                    b.Property<int>("SitePerformance")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ReportId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.SafetyIncident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidentId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ReportedBy")
                        .HasColumnType("int");

                    b.Property<string>("ResolutionStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("IncidentId");

                    b.HasIndex("ReportedBy");

                    b.ToTable("SafetyIncidents");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Sites", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalArea")
                        .HasColumnType("float");

                    b.Property<double>("YieldEstimate")
                        .HasColumnType("float");

                    b.HasKey("SiteId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.CostManagement", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Manager")
                        .WithMany()
                        .HasForeignKey("ResponsiblePerson")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Gold_Mining_Management_System.Models.Sites", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.EnvironmentalData", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Officer")
                        .WithMany()
                        .HasForeignKey("ConductedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Gold_Mining_Management_System.Models.Sites", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Officer");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Equipments", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Sites", "Site")
                        .WithMany()
                        .HasForeignKey("AssignedSite")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.GeologicalData", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Geologist")
                        .WithMany()
                        .HasForeignKey("GeologistId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Gold_Mining_Management_System.Models.Reports", "SurveyReport")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Gold_Mining_Management_System.Models.Sites", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Geologist");

                    b.Navigation("Site");

                    b.Navigation("SurveyReport");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.MinePlans", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Engineer")
                        .WithMany()
                        .HasForeignKey("AssignedEngineer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gold_Mining_Management_System.Models.Sites", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Engineer");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Notifications", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Sender")
                        .WithMany()
                        .HasForeignKey("SendFrom")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Receiver")
                        .WithMany()
                        .HasForeignKey("SendTo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Production", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Supervisor")
                        .WithMany()
                        .HasForeignKey("ShiftSupervisor")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Gold_Mining_Management_System.Models.Sites", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Reports", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.SafetyIncident", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Reporter")
                        .WithMany()
                        .HasForeignKey("ReportedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("Gold_Mining_Management_System.Models.Sites", b =>
                {
                    b.HasOne("Gold_Mining_Management_System.Models.Users", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Manager");
                });
#pragma warning restore 612, 618
        }
    }
}
